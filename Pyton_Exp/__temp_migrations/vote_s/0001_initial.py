# Generated by Django 2.2.12 on 2021-03-16 06:40

from django.db import migrations, models
import django.db.models.deletion
import otree.db.idmap
import otree.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('otree', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_subsession', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('presupuesto', otree.db.models.IntegerField(default=0, null=True)),
                ('n_votantes', otree.db.models.IntegerField(default=0, null=True)),
                ('n_votantes_A', otree.db.models.IntegerField(default=0, null=True)),
                ('n_votantes_B', otree.db.models.IntegerField(default=0, null=True)),
                ('partido_elegido', otree.db.models.StringField(max_length=10000, null=True)),
                ('ubicacion_pA', otree.db.models.IntegerField(default=0, null=True)),
                ('ubicacion_pB', otree.db.models.IntegerField(default=0, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_s_group', to='otree.Session')),
            ],
            options={
                'db_table': 'vote_s_group',
            },
            bases=(models.Model, otree.db.idmap.GroupIDMapMixin),
        ),
        migrations.CreateModel(
            name='Subsession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vote_s_subsession', to='otree.Session')),
            ],
            options={
                'db_table': 'vote_s_subsession',
            },
            bases=(models.Model, otree.db.idmap.SubsessionIDMapMixin),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_group', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_payoff', otree.db.models.CurrencyField(default=0, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_role', otree.db.models.StringField(max_length=10000, null=True)),
                ('votanteOpartido', otree.db.models.StringField(max_length=10000, null=True)),
                ('tipoAoB', otree.db.models.StringField(max_length=10000, null=True)),
                ('tipo_votante', otree.db.models.IntegerField(null=True)),
                ('pje_win_cA', otree.db.models.IntegerField(null=True)),
                ('pje_win_cB', otree.db.models.IntegerField(null=True)),
                ('p_oferta_choice_A', otree.db.models.BooleanField(blank=True, choices=[[True, 'Si, quiero negociar con el partido A: '], [False, 'No, no quiero negociar con el partido A.']], null=True)),
                ('p_oferta_choice_B', otree.db.models.BooleanField(blank=True, choices=[[True, 'Si, quiero negociar con el partido B: '], [False, 'No, no quiero negociar con el partido B.']], null=True)),
                ('p_oferta_amount_A', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('p_oferta_amount_B', otree.db.models.IntegerField(blank=True, default=0, null=True)),
                ('partido_envia_puntos', otree.db.models.BooleanField(blank=True, choices=[[True, 'SÃ­'], [False, 'No.']], null=True)),
                ('votante_acepta_oferta', otree.db.models.IntegerField(blank=True, choices=[[1, 'Los puntos del partido A.'], [2, 'Los puntos del partido B.'], [3, 'Ninguna oferta; no quiero aceptar puntos a cambio de mi voto.']], null=True)),
                ('win_lose', otree.db.models.StringField(max_length=10000, null=True)),
                ('win_losev', otree.db.models.StringField(max_length=10000, null=True)),
                ('puntos', otree.db.models.IntegerField(default=0, null=True)),
                ('avanza_vs_1', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], null=True)),
                ('avanza_vs_2', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], null=True)),
                ('avanza_vs_3', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], null=True)),
                ('avanza_vs_4', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], null=True)),
                ('avanza_vs_5', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], null=True)),
                ('avanza_vs_6', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], null=True)),
                ('avanza_vs_7', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], null=True)),
                ('avanza_vs_8', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], null=True)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='vote_s.Group')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_s_player', to='otree.Participant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vote_s_player', to='otree.Session')),
                ('subsession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vote_s.Subsession')),
            ],
            options={
                'db_table': 'vote_s_player',
            },
            bases=(models.Model, otree.db.idmap.PlayerIDMapMixin),
        ),
        migrations.AddField(
            model_name='group',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vote_s.Subsession'),
        ),
    ]
